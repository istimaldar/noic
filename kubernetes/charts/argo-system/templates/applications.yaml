{{ if .Values.applications.openebs.enabled -}}
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: openebs
  labels:
    {{- include "argo-system.labels" . | nindent 4 }}
  annotations:
    argocd.argoproj.io/sync-wave: "-6"
spec:
  project: default
  sources:
    - repoURL: https://openebs.github.io/charts
      targetRevision: {{ .Values.applications.openebs.version | quote }}
      chart: openebs
      helm:
        valueFiles:
          - $values/kubernetes/values/{{ .Values.environment }}/openebs.values.yaml
    - repoURL: https://github.com/istimaldar/noic.git
      targetRevision: HEAD
      ref: values
  destination:
    server: https://kubernetes.default.svc
    namespace: openebs
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
      allowEmpty: true
    syncOptions:
      - Validate=false
      - CreateNamespace=true
      - PrunePropagationPolicy=foreground
      - PruneLast=true
{{- end }}
{{ if .Values.applications.crossplane.enabled -}}
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: crossplane
  labels:
    {{- include "argo-system.labels" . | nindent 4 }}
  annotations:
    argocd.argoproj.io/sync-wave: "-5"
spec:
  project: default
  sources:
    - repoURL: https://charts.crossplane.io/stable
      targetRevision: {{ .Values.applications.crossplane.version | quote }}
      chart: crossplane
      helm:
        valueFiles:
          - $values/kubernetes/values/{{ .Values.environment }}/crossplane.values.yaml
    - repoURL: https://github.com/istimaldar/noic.git
      targetRevision: HEAD
      ref: values
  destination:
    server: https://kubernetes.default.svc
    namespace: crossplane-system
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
      allowEmpty: true
    syncOptions:
      - Validate=false
      - CreateNamespace=true
      - PrunePropagationPolicy=foreground
      - PruneLast=true
{{- end }}
{{ if .Values.applications.cert_manager.enabled -}}
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: cert-manager
  labels:
    {{- include "argo-system.labels" . | nindent 4 }}
  annotations:
    argocd.argoproj.io/sync-wave: "-5"
spec:
  project: default
  sources:
    - repoURL: https://charts.jetstack.io
      targetRevision: {{ .Values.applications.cert_manager.version | quote }}
      chart: cert-manager
      helm:
        valueFiles:
          - $values/kubernetes/values/{{ .Values.environment }}/cert-manager.values.yaml
    - repoURL: https://github.com/istimaldar/noic.git
      targetRevision: HEAD
      ref: values
  destination:
    server: https://kubernetes.default.svc
    namespace: cert-manager
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
      allowEmpty: true
    syncOptions:
      - Validate=false
      - CreateNamespace=true
      - PrunePropagationPolicy=foreground
      - PruneLast=true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: cert-manager-issuer
  labels:
    {{- include "argo-system.labels" . | nindent 4 }}
  annotations:
    argocd.argoproj.io/sync-wave: "-5"
spec:
  project: default
  sources:
    - repoURL: https://github.com/istimaldar/noic.git
      targetRevision: HEAD
      path: kubernetes/charts/cert-manager-issuer
      helm:
        parameters:
          - name: environment
            value: {{ .Values.environment | quote }}
        valueFiles:
          - ../../values/{{ .Values.environment }}/cert-manager-issuer.values.yaml
  destination:
    server: https://kubernetes.default.svc
    namespace: cert-manager
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
      allowEmpty: true
    syncOptions:
      - Validate=false
      - CreateNamespace=true
      - PrunePropagationPolicy=foreground
      - PruneLast=true
{{- end }}
{{ if .Values.applications.trust_manager.enabled -}}
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: trust-manager
  labels:
    {{- include "argo-system.labels" . | nindent 4 }}
  annotations:
    argocd.argoproj.io/sync-wave: "-5"
spec:
  project: default
  sources:
    - repoURL: https://charts.jetstack.io
      targetRevision: {{ .Values.applications.trust_manager.version | quote }}
      chart: trust-manager
      helm:
        valueFiles:
          - $values/kubernetes/values/{{ .Values.environment }}/trust-manager.values.yaml
    - repoURL: https://github.com/istimaldar/noic.git
      targetRevision: HEAD
      ref: values
  destination:
    server: https://kubernetes.default.svc
    namespace: cert-manager
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
      allowEmpty: true
    syncOptions:
      - Validate=false
      - CreateNamespace=true
      - PrunePropagationPolicy=foreground
      - PruneLast=true
{{- end }}
{{ if .Values.applications.traefik.enabled -}}
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: traefik
  labels:
    {{- include "argo-system.labels" . | nindent 4 }}
  annotations:
    argocd.argoproj.io/sync-wave: "-4"
spec:
  project: default
  sources:
    - repoURL: https://traefik.github.io/charts
      targetRevision: '22.1.0'
      chart: traefik
      helm:
        valueFiles:
          - $values/kubernetes/values/{{ .Values.environment }}/traefik.values.yaml
    - repoURL: https://github.com/istimaldar/noic.git
      targetRevision: HEAD
      ref: values
  destination:
    server: https://kubernetes.default.svc
    namespace: traefik
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
      allowEmpty: true
    syncOptions:
      - Validate=false
      - CreateNamespace=true
      - PrunePropagationPolicy=foreground
      - PruneLast=true
{{- end }}
{{ if .Values.applications.argocd.enabled -}}
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: argocd
  labels:
    {{- include "argo-system.labels" . | nindent 4 }}
  annotations:
    argocd.argoproj.io/sync-wave: "-2"
spec:
  project: default
  sources:
    - repoURL: https://argoproj.github.io/argo-helm
      targetRevision: {{ .Values.applications.argocd.version | quote }}
      chart: argo-cd
      helm:
        valueFiles:
          - $values/kubernetes/values/{{ .Values.environment }}/argo-cd.values.yaml
    - repoURL: https://github.com/istimaldar/noic.git
      targetRevision: HEAD
      ref: values
  destination:
    server: https://kubernetes.default.svc
    namespace: argocd
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
      allowEmpty: true
    syncOptions:
      - Validate=false
      - CreateNamespace=true
      - PrunePropagationPolicy=foreground
      - PruneLast=true
{{- end }}
{{ if .Values.applications.argo_workflows.enabled -}}
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: argo-workflows
  labels:
    {{- include "argo-system.labels" . | nindent 4 }}
  annotations:
    argocd.argoproj.io/sync-wave: "-2"
spec:
  project: default
  sources:
    - repoURL: https://argoproj.github.io/argo-helm
      targetRevision: {{ .Values.applications.argo_workflows.version | quote }}
      chart: argo-workflows
      helm:
        valueFiles:
          - $values/kubernetes/values/{{ .Values.environment }}/argo-workflows.values.yaml
    - repoURL: https://github.com/istimaldar/noic.git
      targetRevision: HEAD
      ref: values
  destination:
    server: https://kubernetes.default.svc
    namespace: workflows
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
      allowEmpty: true
    syncOptions:
      - Validate=false
      - CreateNamespace=true
      - PrunePropagationPolicy=foreground
      - PruneLast=true
{{- end }}
{{ if .Values.applications.zitadel.enabled -}}
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: zitadel-cockroachdb
  labels:
    {{- include "argo-system.labels" . | nindent 4 }}
  annotations:
    argocd.argoproj.io/sync-wave: "-5"
spec:
  project: default
  sources:
    - repoURL: https://charts.cockroachdb.com/
      targetRevision: {{ .Values.applications.zitadel.components.cockroachdb.version | quote }}
      chart: cockroachdb
      helm:
        valueFiles:
          - $values/kubernetes/values/{{ .Values.environment }}/zitadel-cockroachdb.values.yaml
    - repoURL: https://github.com/istimaldar/noic.git
      targetRevision: HEAD
      ref: values
  destination:
    server: https://kubernetes.default.svc
    namespace: zitadel
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
      allowEmpty: true
    syncOptions:
      - Validate=false
      - CreateNamespace=true
      - PrunePropagationPolicy=foreground
      - PruneLast=true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: zitadel
  labels:
    {{- include "argo-system.labels" . | nindent 4 }}
  annotations:
    argocd.argoproj.io/sync-wave: "-3"
spec:
  project: default
  sources:
    - repoURL: https://charts.zitadel.com
      targetRevision: {{ .Values.applications.zitadel.version | quote }}
      chart: zitadel
      helm:
        valueFiles:
          - $values/kubernetes/values/{{ .Values.environment }}/zitadel.values.yaml
    - repoURL: https://github.com/istimaldar/noic.git
      targetRevision: HEAD
      ref: values
  destination:
    server: https://kubernetes.default.svc
    namespace: zitadel
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
      allowEmpty: true
    syncOptions:
      - Validate=false
      - CreateNamespace=true
      - PrunePropagationPolicy=foreground
      - PruneLast=true
{{- end }}
{{ if .Values.applications.mattermost.enabled -}}
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: mattermost
  labels:
    {{- include "argo-system.labels" . | nindent 4 }}
  annotations:
    argocd.argoproj.io/sync-wave: "-1"
spec:
  project: default
  sources:
    - repoURL: https://helm.mattermost.com
      targetRevision: {{ .Values.applications.mattermost.version | quote }}
      chart: mattermost-team-edition
      helm:
        valueFiles:
          - $values/kubernetes/values/{{ .Values.environment }}/mattermost.values.yaml
    - repoURL: https://github.com/istimaldar/noic.git
      targetRevision: HEAD
      ref: values
  destination:
    server: https://kubernetes.default.svc
    namespace: mattermost
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
      allowEmpty: true
    syncOptions:
      - Validate=false
      - CreateNamespace=true
      - PrunePropagationPolicy=foreground
      - PruneLast=true
{{- end }}
